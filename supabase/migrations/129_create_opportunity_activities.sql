-- This migration creates the table to store the activity feed for the Sales CRM Opportunities.

-- Step 1: Create a custom type for the different kinds of activities.
CREATE TYPE public.opportunity_activity_type AS ENUM (
    'stage_change',
    'note_added',
    'value_change',
    'created'
);

-- Step 2: Create the 'opportunity_activities' table.
CREATE TABLE public.opportunity_activities (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    opportunity_id bigint NOT NULL,
    profile_id uuid NOT NULL, -- The admin/staff member who performed the action
    activity_type public.opportunity_activity_type NOT NULL,
    details jsonb, -- To store extra info, like old/new stage or value
    created_at timestamptz NOT NULL DEFAULT now(),

    CONSTRAINT opportunity_activities_pkey PRIMARY KEY (id),
    CONSTRAINT opportunity_activities_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES public.opportunities(id) ON DELETE CASCADE,
    CONSTRAINT opportunity_activities_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id) ON DELETE SET NULL
);

-- Step 3: Automatically log the creation of any existing opportunities.
-- This ensures that all deals have a "Created" event in their history.
INSERT INTO public.opportunity_activities (opportunity_id, profile_id, activity_type, details)
SELECT 
    id, 
    assigned_to_profile_id, 
    'created'::public.opportunity_activity_type, 
    jsonb_build_object('stage', stage, 'value', value)
FROM public.opportunities
ON CONFLICT DO NOTHING;